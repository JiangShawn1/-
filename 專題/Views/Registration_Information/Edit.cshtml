@model 專題.Models.ViewModels.Registration_InformationEditVM

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Registration_Information</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        <input name="RegistrationID" value="@Model.RegistrationID" hidden />
        <input name="InformationID" value="@Model.InformationID" hidden />
        @{
            var CCid = Model.Contest_CategoryID.ToString();
            var list = ViewBag.Contest_CategoryID as List<SelectListItem>;
            foreach (var item in list)
            {
                item.Selected = (CCid == item.Value);
            }

            var Mid = Model.MemberID.ToString();
            var list2 = ViewBag.MemberID as List<SelectListItem>;
            foreach (var item in list2)
            {
                item.Selected = (Mid == item.Value);
            }
        }


        <div class="form-group" hidden>
            @Html.LabelFor(model => model.MemberID, "報名人", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">             
                @Html.DropDownList("MemberID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MemberID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Contest_CategoryID, "報名賽事", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Contest_CategoryID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Contest_CategoryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PaymentStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.PaymentStatus)
                    @Html.ValidationMessageFor(model => model.PaymentStatus, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <h2>參賽資料</h2>
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.RadioButtonFor(model => model.Gender, true)男
                @Html.RadioButtonFor(model => model.Gender, false)女
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Phone, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Address, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
