@model 專題.Models.EFModels.Forum_SectionBranch1TopicsThread

@{
    ViewBag.Title = "Edit";
}

<h2>修改</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>修改文章內容</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group"hidden>
            @Html.LabelFor(model => model.topicId, "topicId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("topicId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.topicId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" hidden>
            @Html.LabelFor(model => model.topicState, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.topicState, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.topicState, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group"hidden>
            @Html.LabelFor(model => model.replyNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.replyNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.replyNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group"hidden>
            @Html.LabelFor(model => model.replyContent,"文章內容", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.replyContent, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.replyContent, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group"hidden>
            @Html.LabelFor(model => model.replyTime,"回覆時間", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.replyTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.replyTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.replyState, "發文狀態", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.replyState, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.replyState, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group"hidden>
            @Html.LabelFor(model => model.replyMemberId, "replyMemberId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("replyMemberId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.replyMemberId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="修改發文" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("回到文章管理", "Index")
</div>

