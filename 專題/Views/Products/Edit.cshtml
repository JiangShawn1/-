@model 專題.Models.EFModels.Product

@{
    ViewBag.Title = "Edit";
}

<h2>修改</h2>


@using (Html.BeginForm("Edit", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Brand_Id, "Brand_Id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownList("Brand_Id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Brand_Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductIntroduce, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.TextAreaFor(model => model.ProductIntroduce, new { @class = "form-control h", style = "height: 100px" })
                @Html.ValidationMessageFor(model => model.ProductIntroduce, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Color_Id, "Color_Id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownList("Color_Id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Color_Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="control-label col-md-2">原圖片</div>
            <div class="col-md-10">
                <img src="@Url.Content(Model.ImageUrl)" alt="image" width="200" height="200">
                <input type="file" name="ImageUrl" id="fileInput" onchange="showPreview()" required />
                <div class="control-label col-md-2">新圖片</div>
                <img id="preview" style="display:none; " width="200" height="200" />
                <p id="error"></p>
                @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
            </div>
            <div class="control-label col-md-2">新圖片</div>
            <div class="col-md-10">
                
            </div>


        </div>
        <div class="form-group">
           
        </div>

        @*<div class="form-group">
                <div class="control-label col-md-2">圖片</div>
                <div class="col-md-10">
                    <input type="file" name="ImageUrl" id="fileInput" onchange="showPreview()" />
                    <img id="preview" style="display:none;" />
                    <p id="error"></p>
                    @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.ActionLink("Back", "Index", null, new { @class = "btn btn-secondary" })
                <input type="submit" value="save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<script>
    function showPreview() {
        var file = $("#fileInput")[0].files[0];

        var img = new Image();
        var url = URL.createObjectURL(file);
        img.src = url;

        img.onload = function () {
            $("#preview").attr("src", url);
            $("#preview").show();
        }
    }

    function checkImageSize() {
        var maxWidth = 800;
        var maxHeight = 600;
        var img = document.getElementById("preview");

        if (img.naturalWidth > maxWidth || img.naturalHeight > maxHeight) {
            $("#error").html("圖片尺寸不能超過 " + maxWidth + " x " + maxHeight);
            $("#fileInput").val("");
            return false;
        } else {
            $("#error").html("");
            return true;
        }
    }
</script>